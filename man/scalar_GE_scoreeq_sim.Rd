% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scalar_GE_scoreeq_sim.R
\name{scalar_GE_scoreeq_sim}
\alias{scalar_GE_scoreeq_sim}
\title{GE_scoreeq_sim.R}
\usage{
scalar_GE_scoreeq_sim(num_sims = 5000, num_sub = 2000, beta_vec, prob_G,
  rho_vec)
}
\arguments{
\item{num_sims}{The number of repetitions to run, default is 5000}

\item{num_sub}{The number of subjects to simulate, default is 2000}

\item{beta_vec}{A vector of the effect sizes in the true model.
Use the order beta_0, beta_G, beta_E, beta_I, beta_Z, beta_M.}

\item{prob_G}{Probability that an allele is 1.  Since G has two alleles, E[G]=2*prob_G.}

\item{rho_vec}{A vector of the covariances in the order:
(1) cov_GE (2) cov_GZ (3) cov_EZ (4) cov_GW (5) cov_EW (6) cov_ZW.}
}
\description{
Deprecated as of Sep 27, 2016. Designed to work only with scalar Z and M.
}
\details{
Here we perform simulation to verify that we have solved for
the correct alpha values. 
No vector covariates yet, just scalars.
Assume all covariates are marginally normal and jointly multivariate normal,
with the exception of G, which is generated by thresholding two (pairwise independent) normals.
Assume all covariates have variance 1, except for G.
Assume F=E^2 and W=M^2.
}
\examples{
library(mvtnorm)
rho_vec <- rep(0.3, 6)
beta_vec <- runif(6)
prob_G <- runif(1, min=0.05, max=0.95)
GE_bias_results <- GE_bias_normal_squaredmis(beta_vec, mu_vec, rho_vec)
GE_nleqslv(GE_bias_results$beta_vec, GE_bias_results$mu_vec, GE_bias_results$cov_vec,
		GE_bias_results$MU_ZZ, GE_bias_results$MU_ZM, GE_bias_results$MU_ZW,
		GE_bias_results$MU_WM, GE_bias_results$MU_WW, GE_bias_results$HOM_vec)
GE_scoreeq_sim(beta_vec=beta_vec, prob_G, rho_vec=rho_vec)
}
\keyword{simulation}

